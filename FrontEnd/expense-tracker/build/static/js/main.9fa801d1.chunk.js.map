{"version":3,"sources":["components/BudgetItem/BudgetItem.js","components/BudgetBar/BudgetBar.js","components/Chart/Chart.js","components/CashFlow/CashFlow.js","components/List/List.js","GraphQL/Mutation.js","GraphQL/Query.js","App.js","reportWebVitals.js","index.js"],"names":["BudgetItem","props","classes","className","title","startsWith","push","join","text","BudgetBar","budget","toLocaleString","replace","remaining","spent","DoughnutChart","data","labels","datasets","chartData","backgroundColor","borderColor","borderWidth","CashFlow","error","style","color","type","name","placeholder","value","transaction","onChange","change","onClick","click","amount","List","getAmountClasses","role","id","autoComplete","checked","selected","changeRadio","htmlFor","changeFilter","mostExpensive","top3","map","item","i","items","delete","CREATE_TRANSACTION","gql","DELETE_TRANSACTION","getALL","App","useState","radioState","setRadioState","filterState","setFilterState","transactionState","setTransactionState","budgetState","setBudgetState","mostExpensiveState","setMostExpensiveState","top3State","setTop3State","dataState","setDataState","errorState","setErrorState","useQuery","loading","useMutation","createTransaction","deleteTransaction","useEffect","getAll","sumFiltered","arr","filter","length","reduce","prev","curr","bud","sp","sort","a","b","slice","variables","parseInt","then","event","target","types","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"uYA+BeA,EA5BI,SAACC,GAChB,IAAMC,EAAU,CAAC,eAejB,OACI,qBAAKC,UAAU,kBAAf,SACI,qBAAKA,WAfLF,EAAMG,MAAMC,WAAW,UACvBH,EAAQI,KAAK,UAERL,EAAMG,MAAMC,WAAW,aAC5BH,EAAQI,KAAK,aAGbJ,EAAQI,KAAK,SAGVJ,EAAQK,KAAK,MAKhB,SACI,sBAAKJ,UAAU,SAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBF,EAAMG,QAC7B,sBAAKD,UAAU,UAAf,UAA0BF,EAAMO,KAAhC,kBCNLC,G,OAdG,SAACR,GACf,OACI,sBAAKE,UAAU,aAAf,UACI,uBACA,sBAAKA,UAAU,MAAf,UACI,cAAC,EAAD,CAAYC,MAAM,SAASI,KAAMP,EAAMS,OAAOC,eAAe,SAASC,QAAQ,KAAM,OACpF,cAAC,EAAD,CAAYR,MAAM,YAAYI,KAAMP,EAAMY,UAAUF,eAAe,SAASC,QAAQ,KAAM,OAC1F,cAAC,EAAD,CAAYR,MAAM,eAAeI,KAAMP,EAAMa,MAAMH,eAAe,SAASC,QAAQ,KAAM,UAE7F,4B,SCoBGG,G,OA7BO,SAACd,GACnB,IAAMe,EAAO,CACTC,OAAQ,CAAC,SAAU,YAAa,SAChCC,SAAU,CACN,CACAF,KAAMf,EAAMkB,UACZC,gBAAiB,CACb,yBACA,yBACA,0BAEJC,YAAa,CACT,uBACA,uBACA,wBAEJC,YAAa,KAKrB,OACI,sBAAKnB,UAAU,iBAAf,UACI,uCACA,cAAC,IAAD,CAAUa,KAAMA,SCUbO,G,OAlCE,SAACtB,GACd,OACI,sBAAKE,UAAU,4BAAf,UACI,2CACCF,EAAMuB,OAAS,oBAAIC,MAAO,CAACC,MAAO,OAAnB,SAA6BzB,EAAMuB,QACnD,qBAAKrB,UAAU,cAAf,SACI,yCAEI,uBAAOwB,KAAK,OAAOC,KAAK,OAAOzB,UAAU,eAAe0B,YAAY,iBAChEC,MAAO7B,EAAM8B,YAAYH,KAAMI,SAAU/B,EAAMgC,cAG3D,sBAAK9B,UAAU,oBAAf,UACI,2CACA,sBAAKA,UAAU,cAAf,UACI,wBAAQA,UAAU,6BAA6BwB,KAAK,SAChDO,QAAS,kBAAMjC,EAAMkC,MAAM,WAD/B,oBAIA,uBAAOR,KAAK,OAAOC,KAAK,SAASzB,UAAU,eAAe0B,YAAY,OAClEC,MAAO7B,EAAM8B,YAAYK,OAAQJ,SAAU/B,EAAMgC,SACrD,wBAAQ9B,UAAU,8BAA8BwB,KAAK,SACjDO,QAAS,kBAAMjC,EAAMkC,MAAM,YAD/B,2BAOR,cAAC,EAAD,CAAehB,UAAWlB,EAAMkB,iBC0D7BkB,G,OAvFF,SAACpC,GACV,IAAMqC,EAAmB,SAACX,GACtB,IAAMzB,EAAU,CAAC,QAAS,eAAgB,cAM1C,MAJa,YAATyB,GACAzB,EAAQI,KAAK,kBAGVJ,EAAQK,KAAK,MAGxB,OACI,sBAAKJ,UAAU,+BAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,+BAA+BoC,KAAK,QAAnD,UACI,uBAAOZ,KAAK,QAAQxB,UAAU,YAAYyB,KAAK,WAAWY,GAAG,WAAWC,aAAa,MACjFC,QAA4B,aAAnBzC,EAAM0C,SACfX,SAAU/B,EAAM2C,cACpB,uBAAOzC,UAAU,uBAAuB0C,QAAQ,WAAhD,sBAEA,uBAAOlB,KAAK,QAAQxB,UAAU,YAAYyB,KAAK,WAAWY,GAAG,UAAUC,aAAa,MAChFC,QAA4B,YAAnBzC,EAAM0C,SACfX,SAAU/B,EAAM2C,cACpB,uBAAOzC,UAAU,uBAAuB0C,QAAQ,UAAhD,qBAEA,uBAAOlB,KAAK,QAAQxB,UAAU,YAAYyB,KAAK,WAAWY,GAAG,MAAMC,aAAa,MAC5EC,QAA4B,QAAnBzC,EAAM0C,SACfX,SAAU/B,EAAM2C,cACpB,uBAAOzC,UAAU,uBAAuB0C,QAAQ,MAAhD,sBAGR,qBAAK1C,UAAU,mBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,uBAAOwB,KAAK,OAAOxB,UAAU,eAAe0B,YAAY,iBACpDG,SAAU/B,EAAM6C,sBAKhC,qBAAK3C,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,oDAAf,UACI,qBAAKA,UAAU,yBAAf,wCACA,qBAAKA,UAAU,wBAAf,SAEQF,EAAM8C,cAAcnB,MAApB,UACG3B,EAAM8C,cAAcnB,KADvB,aACgC3B,EAAM8C,cAAcX,OAAOzB,eAAe,SAASC,QAAQ,KAAM,KADjG,kBAQpB,qBAAKT,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,0CAAf,UACI,qBAAKA,UAAU,eAAf,4BACCF,EAAM+C,MAAQ/C,EAAM+C,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAC1B,qBAAKhD,UAAU,wBAAf,mBAEWgD,EAAI,EAFf,aAEqBD,EAAKtB,KAF1B,aAEmCsB,EAAKd,OAAOzB,eAAe,SAASC,QAAQ,KAAM,KAFrF,UAA4CsC,EAAKV,cAUjE,qBAAKrC,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,kCAAf,SACKF,EAAMmD,OAASnD,EAAMmD,MAAMH,KAAI,SAAAC,GAAI,OAChC,sBAAK/C,UAAU,yCAAf,UACI,uBAAMA,UAAWmC,EAAiBY,EAAKvB,MAAvC,UAA+CuB,EAAKd,OAAOzB,eAAe,SAASC,QAAQ,KAAM,KAAjG,UACA,wBAAQT,UAAU,UAAU+B,QAAS,kBAAMjC,EAAMoD,OAAOH,EAAKV,KAA7D,eACA,qBAAKrC,UAAU,cAAf,SAA8B+C,EAAKtB,SAHsBsB,EAAKV,kB,mCC1EjFc,EAAqBC,YAAH,yPAWlBC,EAAqBD,YAAH,8GCXlBE,EAASF,YAAH,2GCgLJG,MAzKf,WACE,MAAoCC,mBAAS,YAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgDJ,mBAAS,CACvD/B,KAAM,GACNQ,OAAQ,GACRT,KAAM,KAHR,mBAAOqC,EAAP,KAAyBC,EAAzB,KAKA,EAAsCN,mBAAS,CAC7CjD,OAAQ,EACRG,UAAW,EACXC,MAAO,IAHT,mBAAOoD,EAAP,KAAoBC,EAApB,KAKA,EAAoDR,mBAAS,CAC3D/B,KAAM,GACNQ,OAAQ,IAFV,mBAAOgC,EAAP,KAA2BC,EAA3B,KAIA,EAAkCV,mBAAS,IAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAkCZ,mBAAS,IAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAoCd,mBAAS,IAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KACA,EAA0BC,YAASnB,GAA3BoB,EAAR,EAAQA,QAAS7D,EAAjB,EAAiBA,KACjB,EAA4B8D,YAAYxB,GAAjCyB,EAAP,oBACA,EAA4BD,YAAYtB,GAAjCwB,EAAP,oBACQtE,EAA6BwD,EAA7BxD,OAAQG,GAAqBqD,EAArBrD,UAAWC,GAAUoD,EAAVpD,MAoH3B,OAlHAmE,qBAAU,WACHJ,GACHJ,EAAazD,EAAKkE,UAEnB,CAACL,EAAS7D,IAEbiE,qBAAU,WACR,IAAME,EAAc,SAACxD,GACnB,IAAMyD,EAAMZ,EAAUa,QAAO,SAAAnC,GAAI,OAAIA,EAAKvB,OAASA,KACnD,OAAIyD,EAAIE,OAAS,EACRF,EAAIG,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,EAAKrD,SAAQ,GAG/C,GAGLsD,EAAMP,EAAY,UAClBQ,EAAKR,EAAY,WAEvBhB,EAAe,CACbzD,OAAQgF,EACR7E,UAAW6E,EAAIC,EACf7E,MAAO6E,MAER,CAACnB,IAEJS,qBAAU,WACR,IAAMG,EAAMZ,EAAUa,QAAO,SAAAnC,GAAI,MAAkB,YAAdA,EAAKvB,QAC1CyD,EAAIQ,MAAK,SAAUC,EAAGC,GACpB,OAAOA,EAAE1D,OAASyD,EAAEzD,UAEtB,MAA0BgD,EAAIE,OAAS,EAAKF,EAAI,GAAK,CAAExD,KAAM,GAAIQ,OAAQ,GAAjER,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,OAEdiC,EAAsB,CACpBzC,KAAMA,EACNQ,OAAQA,MAET,CAACoC,IAEJS,qBAAU,WACR,IAAMG,EAAMZ,EAAUa,QAAO,SAAAnC,GAAI,MAAkB,YAAdA,EAAKvB,QAC1CyD,EAAIQ,MAAK,SAAUC,EAAGC,GACpB,OAAOA,EAAE1D,OAASyD,EAAEzD,UAGtBmC,EAAaa,EAAIW,MAAM,EAAE,MACxB,CAACvB,IAqEF,sBAAKrE,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEO,OAAQA,EACRG,UAAWA,GACXC,MAAOA,KAET,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CACEgC,MAnDkB,SAACR,GACpBqC,EAAiBpC,MAASoC,EAAiB5B,QAI9CuC,EAAc,IACdI,EAAkB,CAChBiB,UAAW,CACTpE,KAAMoC,EAAiBpC,KACvBQ,OAAQ6D,SAASjC,EAAiB5B,QAClCT,KAAMA,KAEPuE,MAAK,SAAAlF,GACNyD,EAAa,GAAD,mBAAKD,GAAL,CAAgBxD,EAAKA,KAAK+D,qBACtCd,EAAoB,CAClBrC,KAAM,GACNQ,OAAQ,GACRT,KAAM,SAfVgD,EAAc,mCAkDV1C,OA7E0B,SAACkE,GACjC,MAAsBA,EAAMC,OAAtBxE,EAAN,EAAMA,KAAME,EAAZ,EAAYA,MACZmC,EAAoB,2BAAKD,GAAN,kBAAyBpC,EAAOE,MA4E7CC,YAAaiC,EACbxC,MAAOkD,EACPvD,UAAW,CAACT,EAAQG,GAAWC,MAEjC,cAAC,EAAD,CACEsC,MAAOoB,EAAUa,QAnCL,SAACnC,GACnB,IAAImD,EAAQ,GACZ,OAAQzC,GACN,IAAK,UACHyC,EAAM/F,KAAK,UACX,MACF,IAAK,WACH+F,EAAM/F,KAAK,WACX,MACF,QACE+F,EAAM/F,KAAK,UACX+F,EAAM/F,KAAK,WAIf,OAAO+F,EAAMC,SAASpD,EAAKvB,QAAUuB,EAAKtB,KAAKvB,WAAWyD,KAAiBA,MAqBrEf,cAAeqB,EACfpB,KAAMsB,EACN3B,SAAUiB,EACVhB,YAlFkB,SAACuD,GACzBtC,EAAcsC,EAAMC,OAAO5D,KAkFrBM,aA/EmB,SAACqD,GAC1BpC,EAAeoC,EAAMC,OAAOtE,QA+EtBuB,OA5Ea,SAACb,GACpBwC,EAAkB,CAChBgB,UAAW,CACTxD,GAAIA,KAGP0D,MAAK,WACJ,IAAMd,EAAMZ,EAAUa,QAAO,SAAAnC,GAAI,OAAIA,EAAKV,KAAOA,KACjDiC,EAAaW,gBC3FJmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,oCCARO,EAAS,IAAIC,IAAa,CAC9BC,MAAO,IAAIC,IACXC,KAAM,IAAIC,IAAS,CACjBC,IAAK,4DAITC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBV,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJW,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.9fa801d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './BudgetItem.css';\r\n\r\nconst BudgetItem = (props) => {\r\n    const classes = ['budget-item'];\r\n    const getClassName = () => {\r\n        if (props.title.startsWith('Budget')) {\r\n            classes.push('budget');\r\n        }\r\n        else if (props.title.startsWith('Remaining')) {\r\n            classes.push('remaining');\r\n        }\r\n        else {\r\n            classes.push('spent');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-4\">\r\n            <div className={getClassName()}>\r\n                <div className=\"center\">\r\n                    <div className=\"left\">{props.title}</div>\r\n                    <div className=\"content\">{props.text} HUF</div>\r\n                </div>\r\n            </div>           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BudgetItem;","import React from 'react';\r\nimport BudgetItem from '../BudgetItem/BudgetItem';\r\nimport './BudgetBar.css';\r\n\r\nconst BudgetBar = (props) => {\r\n    return (\r\n        <div className=\"budget-bar\">\r\n            <hr />\r\n            <div className=\"row\">\r\n                <BudgetItem title=\"Budget\" text={props.budget.toLocaleString('en-US').replace(/,/g, '.')} />\r\n                <BudgetItem title=\"Remaining\" text={props.remaining.toLocaleString('en-US').replace(/,/g, '.')} />\r\n                <BudgetItem title=\"Spent so far\" text={props.spent.toLocaleString('en-US').replace(/,/g, '.')} />  \r\n            </div>\r\n            <hr />   \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BudgetBar;","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport './Chart.css';\r\n\r\nconst DoughnutChart = (props) => {\r\n    const data = {\r\n        labels: ['Budget', 'Remaining', 'Spent'],\r\n        datasets: [\r\n            {\r\n            data: props.chartData,\r\n            backgroundColor: [\r\n                'rgba(2, 117, 216, 0.2)',\r\n                'rgba(92, 184, 92, 0.2)',\r\n                'rgba(217, 83, 79, 0.2)'\r\n            ],\r\n            borderColor: [\r\n                'rgba(2, 117, 216, 1)',\r\n                'rgba(92, 184, 92, 1)',\r\n                'rgba(217, 83, 79, 1)'\r\n            ],\r\n            borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className=\"doughnut-chart\">\r\n            <h2>Chart</h2>\r\n            <Doughnut data={data} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoughnutChart;","import React from 'react';\r\nimport DoughnutChart from '../Chart/Chart';\r\nimport './CashFlow.css';\r\n\r\nconst CashFlow = (props) => {\r\n    return (\r\n        <div className=\"col-12 col-md-4 cash-flow\">\r\n            <h2>Cash flow</h2>\r\n            {props.error && <h3 style={{color: \"red\"}} >{props.error}</h3>}\r\n            <div className=\"input-group\" >\r\n                <label>\r\n                    Name\r\n                    <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"e.g.: Shopping\" \r\n                        value={props.transaction.name} onChange={props.change} />\r\n                </label>\r\n            </div>\r\n            <div className=\"cash-flow-actions\">\r\n                <label>Amount</label>\r\n                <div className=\"input-group\" >\r\n                    <button className=\"btn btn-primary btn-income\" type=\"button\" \r\n                        onClick={() => props.click('income')} >\r\n                        INCOME\r\n                    </button>\r\n                    <input type=\"text\" name=\"amount\" className=\"form-control\" placeholder=\"3000\" \r\n                        value={props.transaction.amount} onChange={props.change} />\r\n                    <button className=\"btn btn-primary btn-expense\" type=\"button\" \r\n                        onClick={() => props.click('expense')} >\r\n                        EXPENSE\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n            <DoughnutChart chartData={props.chartData}/>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default CashFlow;","import React from 'react';\r\nimport './List.css';\r\n\r\nconst List = (props) => {\r\n    const getAmountClasses = (type) => {\r\n        const classes = ['badge', 'rounded-pill', 'bg-success'];\r\n\r\n        if (type === 'expense') {\r\n            classes.push('amount-expense');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-8 tracker-list\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-xxl-6\">\r\n                    <div className=\"btn-group tracker-list-radio\" role=\"group\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"expenses\" autoComplete=\"off\" \r\n                            checked={props.selected === 'expenses'} \r\n                            onChange={props.changeRadio} />\r\n                        <label className=\"btn btn-outline-dark\" htmlFor=\"expenses\">EXPENSES</label>\r\n\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"incomes\" autoComplete=\"off\" \r\n                            checked={props.selected === 'incomes'} \r\n                            onChange={props.changeRadio} />\r\n                        <label className=\"btn btn-outline-dark\" htmlFor=\"incomes\">INCOMES</label>\r\n\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"all\" autoComplete=\"off\" \r\n                            checked={props.selected === 'all'} \r\n                            onChange={props.changeRadio} />\r\n                        <label className=\"btn btn-outline-dark\" htmlFor=\"all\">ALL</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-xxl-6\">\r\n                    <div className=\"input-group\" >\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Type to search\"\r\n                            onChange={props.changeFilter} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"row bg-dark tracker-list-card most-expensive-card\">\r\n                        <div className=\"col-12 col-xxl-6 label\">Most expensive action ever</div>\r\n                        <div className=\"col-12 col-xxl-6 item\">\r\n                            {\r\n                                props.mostExpensive.name && \r\n                                `${props.mostExpensive.name}: ${props.mostExpensive.amount.toLocaleString('en-US').replace(/,/g, '.')}, HUF`\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"row bg-dark tracker-list-card top3-card\">\r\n                        <div className=\"col-12 label\">Top 3 expenses</div>\r\n                        {props.top3 && props.top3.map((item, i) => (\r\n                            <div className=\"col-12 col-xxl-4 item\" key={item.id}>\r\n                                {\r\n                                    `${i + 1}. ${item.name}: ${item.amount.toLocaleString('en-US').replace(/,/g, '.')}, HUF`\r\n                                }\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"list-group tracker-list-details\">\r\n                        {props.items && props.items.map(item => (\r\n                            <div className=\"list-group-item list-group-item-action\" key={item.id} >\r\n                                <span className={getAmountClasses(item.type)}>{item.amount.toLocaleString('en-US').replace(/,/g, '.')} HUF</span>\r\n                                <button className=\"bg-dark\" onClick={() => props.delete(item.id)}>X</button>\r\n                                <div className=\"inline left\">{item.name}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default List;","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_TRANSACTION = gql`\r\n  mutation createTransaction($name: String, $amount: Int, $type: String) {\r\n    createTransaction(transaction: { name: $name, amount: $amount, type: $type }) {\r\n      id\r\n      name\r\n      amount\r\n      type\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_TRANSACTION = gql`\r\n  mutation deleteTransaction($id: String) {\r\n    deleteTransaction(id: $id)\r\n  }\r\n`;","import { gql } from \"@apollo/client\";\r\n\r\nexport const getALL = gql`\r\n  {\r\n    getAll {\r\n      id\r\n      name\r\n      amount\r\n      type\r\n    }\r\n  }\r\n`;\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport BudgetBar from './components/BudgetBar/BudgetBar';\nimport CashFlow from './components/CashFlow/CashFlow';\nimport List from './components/List/List';\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { CREATE_TRANSACTION, DELETE_TRANSACTION } from \"./GraphQL/Mutation\";\nimport { getALL } from \"./GraphQL/Query\";\n\nfunction App() {\n  const [radioState, setRadioState] = useState('expenses');\n  const [filterState, setFilterState] = useState('');\n  const [transactionState, setTransactionState] = useState({\n    name: '',\n    amount: '',\n    type: ''\n  });\n  const [budgetState, setBudgetState] = useState({\n    budget: 0,\n    remaining: 0,\n    spent: 0\n  });\n  const [mostExpensiveState, setMostExpensiveState] = useState({\n    name: '',\n    amount: 0\n  });\n  const [top3State, setTop3State] = useState([]);\n  const [dataState, setDataState] = useState([]);\n  const [errorState, setErrorState] = useState('');\n  const { loading, data } = useQuery(getALL);\n  const [createTransaction] = useMutation(CREATE_TRANSACTION);\n  const [deleteTransaction] = useMutation(DELETE_TRANSACTION);\n  const { budget, remaining, spent } = budgetState;\n\n  useEffect(() => {\n    if (!loading) {\n      setDataState(data.getAll);\n    }\n  }, [loading, data]);\n\n  useEffect(() => {\n    const sumFiltered = (type) => {\n      const arr = dataState.filter(item => item.type === type );\n      if (arr.length > 0) {\n        return arr.reduce((prev, curr) => prev + curr.amount, 0);\n      }\n      else {\n        return 0;\n      }\n    };\n    const bud = sumFiltered('income');\n    const sp = sumFiltered('expense');\n\n    setBudgetState({\n      budget: bud,\n      remaining: bud-sp,\n      spent: sp\n    });\n  }, [dataState]);\n\n  useEffect(() => {\n    const arr = dataState.filter(item => item.type === 'expense' );\n    arr.sort(function (a, b) {\n      return b.amount - a.amount;\n    });\n    const { name, amount } = (arr.length > 0) ? arr[0] : { name: '', amount: 0 }; \n\n    setMostExpensiveState({\n      name: name,\n      amount: amount\n    });\n  }, [dataState]);\n\n  useEffect(() => {\n    const arr = dataState.filter(item => item.type === 'expense' );\n    arr.sort(function (a, b) {\n      return b.amount - a.amount;\n    });\n\n    setTop3State(arr.slice(0,3));\n  }, [dataState]);\n\n  const handleCashFlowInputChange = (event) => {\n    let { name, value } = event.target;\n    setTransactionState({ ...transactionState, [name]: value });\n  };\n\n  const handleRadioChange = (event) => {\n    setRadioState(event.target.id);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilterState(event.target.value);\n  };\n\n  const handleDelete = (id) => {\n    deleteTransaction({\n      variables: {\n        id: id,\n      },\n    })\n    .then(() => {\n      const arr = dataState.filter(item => item.id !== id );\n      setDataState(arr);\n    });\n  };\n\n  const handleTransaction = (type) => {\n    if (!transactionState.name || !transactionState.amount) {\n      setErrorState('Please input all input fields!');\n    }\n    else {\n      setErrorState('');\n      createTransaction({\n        variables: {\n          name: transactionState.name,\n          amount: parseInt(transactionState.amount),\n          type: type\n        },\n      }).then(data => {\n        setDataState([...dataState, data.data.createTransaction]);\n        setTransactionState({\n          name: '',\n          amount: '',\n          type: ''\n        });\n      });\n    }\n  };\n\n  const predicateFn = (item) => {\n    let types = [];\n    switch (radioState) {\n      case 'incomes':\n        types.push('income');\n        break;\n      case 'expenses':\n        types.push('expense');\n        break;\n      default:\n        types.push('income');\n        types.push('expense');\n        break;\n    }\n\n    return types.includes(item.type) && (item.name.startsWith(filterState) || !filterState);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>My Budget Planner</h1>\n      <BudgetBar \n        budget={budget}\n        remaining={remaining}\n        spent={spent}\n      />\n      <div className=\"row\">\n        <CashFlow \n          click={handleTransaction} \n          change={handleCashFlowInputChange} \n          transaction={transactionState} \n          error={errorState}\n          chartData={[budget, remaining, spent]}\n        />\n        <List \n          items={dataState.filter(predicateFn)} \n          mostExpensive={mostExpensiveState}\n          top3={top3State}\n          selected={radioState} \n          changeRadio={handleRadioChange} \n          changeFilter={handleFilterChange}\n          delete={handleDelete} \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"https://expense-tracker2021.azurewebsites.net/graphql\",\n  }),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}